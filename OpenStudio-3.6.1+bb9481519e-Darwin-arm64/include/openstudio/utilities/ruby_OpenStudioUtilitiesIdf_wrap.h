/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_OpenStudio_WRAP_H_
#define SWIG_OpenStudio_WRAP_H_

namespace Swig {
  class Director;
}


class SwigDirector_Workspace : public openstudio::Workspace, public Swig::Director {

public:
    SwigDirector_Workspace(VALUE self);
    SwigDirector_Workspace(VALUE self,openstudio::StrictnessLevel level);
    SwigDirector_Workspace(VALUE self,openstudio::StrictnessLevel level,openstudio::IddFileType iddFileType);
    SwigDirector_Workspace(VALUE self,openstudio::IdfFile const &idfFile,openstudio::StrictnessLevel level=openstudio::StrictnessLevel::Minimal);
    SwigDirector_Workspace(VALUE self,openstudio::Workspace const &other);
    SwigDirector_Workspace(VALUE self,std::shared_ptr< openstudio::detail::Workspace_Impl > impl);
    virtual ~SwigDirector_Workspace();
    virtual void addVersionObject();
    virtual void addVersionObjectSwigPublic() {
      openstudio::Workspace::addVersionObject();
    }
};


class SwigDirector_IdfObjectWatcher : public openstudio::IdfObjectWatcher, public Swig::Director {

public:
    SwigDirector_IdfObjectWatcher(VALUE self,openstudio::IdfObject const &idfObject);
    virtual ~SwigDirector_IdfObjectWatcher();
    virtual void clearState();
    virtual void onChangeIdfObject();
    virtual void onDataFieldChange();
    virtual void onNameChange();
    virtual void onBecomeDirty();
    virtual void onBecomeClean();
};


class SwigDirector_WorkspaceObjectWatcher : public openstudio::WorkspaceObjectWatcher, public Swig::Director {

public:
    SwigDirector_WorkspaceObjectWatcher(VALUE self,openstudio::WorkspaceObject const &workspaceObject);
    virtual ~SwigDirector_WorkspaceObjectWatcher();
    virtual void clearState();
    virtual void onChangeIdfObject();
    virtual void onDataFieldChange();
    virtual void onNameChange();
    virtual void onBecomeDirty();
    virtual void onBecomeClean();
    virtual void onRelationshipChange(int index,openstudio::Handle newHandle,openstudio::Handle oldHandle);
    virtual void onRemoveFromWorkspace(openstudio::Handle handle);
};


class SwigDirector_WorkspaceWatcher : public openstudio::WorkspaceWatcher, public Swig::Director {

public:
    SwigDirector_WorkspaceWatcher(VALUE self,openstudio::Workspace const &workspace);
    virtual ~SwigDirector_WorkspaceWatcher();
    virtual void clearState();
    virtual void onChangeWorkspace();
    virtual void onBecomeDirty();
    virtual void onBecomeClean();
    virtual void onObjectAdd(openstudio::WorkspaceObject const &addedObject);
    virtual void onObjectRemove(openstudio::WorkspaceObject const &removedObject);
};


#endif
